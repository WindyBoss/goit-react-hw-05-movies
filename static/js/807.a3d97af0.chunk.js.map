{"version":3,"file":"static/js/807.a3d97af0.chunk.js","mappings":"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","sources":["components/ErrorHandler/ErrorHandler.jsx","components/SectionContainer/SectionContainer.styled.jsx","components/SectionContainer/SectionContainer.jsx","hooks/useFetchParams.js","pages/MovieReviews/MovieReviews.jsx","pages/MovieReviews/components/MovieReviewList.jsx","pages/MovieReviews/styles/MovieReviews.styled.jsx","service/ApiService.js","service/stateMachine.js"],"sourcesContent":["import { useEffect } from 'react';\nimport toast from 'react-hot-toast';\n\nconst ErrorHandler = ({ errorMessage, toastErrorMessage }) => {\n  useEffect(() => {\n    console.log(toastErrorMessage)\n    toast.error(toastErrorMessage);\n  }, [toastErrorMessage]);\n\n  return <div>{errorMessage}</div>;\n};\n\nexport default ErrorHandler;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  position: relative;\n  padding: 10px;\n  border: ${props => (props.isEmpty ? 'none' : '1px solid black')};\n  border-radius: 3px;\n  min-height: ${props => (props.isEmpty ? '500px' : 'auto')};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Section } from './SectionContainer.styled';\n\nconst SectionContainer = ({ children, isEmpty }) => {\n  return <Section isEmpty={isEmpty}>{children}</Section>;\n};\n\nSectionContainer.propTypes = {\n  children: PropTypes.any,\n  isEmpty: PropTypes.bool,\n}\n\nexport default SectionContainer;","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport const useFetchParams = ({ init, apiState, fetchAPI }) => {\n  const [state, setState] = useState(init);\n  const params = useParams();\n\n  useEffect(() => {\n    apiState.pending();\n    fetchAPI(params.movieId)\n      .then(data => {\n        setState(data);\n        apiState.success();\n      })\n      .catch(error => {\n        apiState.error()\n      });\n  }, [apiState, fetchAPI, params]);\n\n  return state;\n};\n","import PropTypes from 'prop-types';\n\nimport { fetchReviews } from 'service/ApiService';\nimport { withApiState } from 'service/stateMachine';\nimport { useFetchParams } from 'hooks/useFetchParams';\n\nimport Pending from 'components/Pending';\nimport SectionContainer from 'components/SectionContainer';\nimport ErrorHandler from 'components/ErrorHandler';\nimport { MovieReviewList } from './components/MovieReviewList';\n\nfunction MovieReviews({ apiState }) {\n  const state = useFetchParams({\n    init: {},\n    apiState: apiState,\n    fetchAPI: fetchReviews,\n  });\n\n  return (\n    <SectionContainer isEmpty={state?.results?.length > 0 ? false : true}>\n      {apiState.isSuccess() && <MovieReviewList reviews={state.results} />}\n      {apiState.isPending() && <Pending />}\n      {apiState.isError() &&          <ErrorHandler\n            errorMessage=\"Oops, something went wrong, try please later\"\n            toastErrorMessage=\"Oops, something went wrong, try please later\"\n          />}\n      {apiState.isIdle() && <div>There is no Information</div>}\n    </SectionContainer>\n  );\n}\n\nMovieReviews.propTypes = {\n  apiState: PropTypes.object,\n};\n\nexport default withApiState(MovieReviews);\n","import PropTypes from 'prop-types';\n\nimport { Review, ReviewsContainer } from '../styles/MovieReviews.styled';\n\nexport const MovieReviewList = ({ reviews }) => {\n  return (\n    <ReviewsContainer>\n      <h4>Review Number: {reviews.length}</h4>\n      {reviews.length > 0 ? (\n        reviews.map(review => (\n          <Review key={review.id}>\n            <h3>{review.author}</h3>\n            <p>{review.content}</p>\n          </Review>\n        ))\n      ) : (\n        <div>There is no Information</div>\n      )}\n    </ReviewsContainer>\n  );\n};\n\nMovieReviewList.propTypes = {\n  reviews: PropTypes.array,\n};\n","import styled from 'styled-components';\n\nexport const Review = styled.li`\n  border: 1px solid black;\n  padding: 15px;\n  border-radius: 5px;\n`;\n\nexport const ReviewsContainer = styled.ul`\n  padding: 0px;\n`;\n","import axios from 'axios';\n\nconst API_KEY = 'ddd72ffccd1b0460d4d5bf775327139b';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchMovie = async movieId => {\n  const { data } = await axios\n    .get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n    .catch(error => errorHandler());\n  return data;\n};\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios\n    .get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n    .catch(error => errorHandler());\n  return data;\n};\n\nexport const fetchMovieByQuery = async (query = '') => {\n  const { data } = await axios\n    .get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`)\n    .catch(error => errorHandler());\n  return data;\n};\n\nexport const fetchReviews = async movieId => {\n  const { data } = await axios\n    .get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    )\n    .catch(error => errorHandler());\n  return data;\n};\n\nexport const fetchActors = async movieId => {\n  const { data } = await axios\n    .get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US&page=1`\n    )\n    .catch(error => errorHandler());\n  return data;\n};\n\nconst errorHandler = () => {\n  throw new Error();\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const withApiState = TargetComponent =>\n  class extends Component {\n    state = {\n      current: 'idle',\n    };\n    apiState = {\n      pending: () => this.setState({ current: 'pending' }), \n      success: () => this.setState({ current: 'success' }),\n      error: () => {\n        console.log('error');\n        this.setState({ current: 'error' });\n      },\n      idle: () => this.setState({ current: 'idle' }),\n      isPending: () => this.state.current === 'pending', \n      isSuccess: () => this.state.current === 'success',\n      isError: () => this.state.current === 'error',\n      isIdle: () => this.state.current === 'idle',\n    };\n\n    render() {\n      return <TargetComponent {...this.props} apiState={this.apiState} />;\n    }\n  };\n\nwithApiState.propTypes = {\n  TargetComponent: PropTypes.func.isRequired,\n};\n"],"names":["errorMessage","toastErrorMessage","useEffect","console","log","toast","Section","styled","props","isEmpty","children","useFetchParams","init","apiState","fetchAPI","useState","state","setState","params","useParams","pending","movieId","then","data","success","catch","error","withApiState","fetchReviews","results","length","isSuccess","MovieReviewList","reviews","isPending","isError","isIdle","ReviewsContainer","map","review","Review","author","content","id","API_KEY","BASE_URL","fetchMovie","axios","errorHandler","fetchTrendingMovies","fetchMovieByQuery","query","fetchActors","Error","TargetComponent","current","idle","this","Component"],"sourceRoot":""}