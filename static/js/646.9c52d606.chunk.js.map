{"version":3,"file":"static/js/646.9c52d606.chunk.js","mappings":"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","sources":["components/ErrorHandler/ErrorHandler.jsx","components/SectionContainer/SectionContainer.styled.jsx","components/SectionContainer/SectionContainer.jsx","hooks/useFetchParams.js","pages/MovieActors/MovieActors.jsx","pages/MovieActors/components/MovieActorsList.jsx","pages/MovieActors/styles/MovieActors.styled.jsx","service/ApiService.js","service/stateMachine.js"],"sourcesContent":["import { useEffect } from 'react';\nimport toast from 'react-hot-toast';\n\nconst ErrorHandler = ({ errorMessage, toastErrorMessage }) => {\n  useEffect(() => {\n    console.log(toastErrorMessage)\n    toast.error(toastErrorMessage);\n  }, [toastErrorMessage]);\n\n  return <div>{errorMessage}</div>;\n};\n\nexport default ErrorHandler;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  position: relative;\n  padding: 10px;\n  border: ${props => (props.isEmpty ? 'none' : '1px solid black')};\n  border-radius: 3px;\n  min-height: ${props => (props.isEmpty ? '500px' : 'auto')};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Section } from './SectionContainer.styled';\n\nconst SectionContainer = ({ children, isEmpty }) => {\n  return <Section isEmpty={isEmpty}>{children}</Section>;\n};\n\nSectionContainer.propTypes = {\n  children: PropTypes.any,\n  isEmpty: PropTypes.bool,\n}\n\nexport default SectionContainer;","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport const useFetchParams = ({ init, apiState, fetchAPI }) => {\n  const [state, setState] = useState(init);\n  const params = useParams();\n\n  useEffect(() => {\n    apiState.pending();\n    fetchAPI(params.movieId)\n      .then(data => {\n        setState(data);\n        apiState.success();\n      })\n      .catch(error => apiState.error());\n  }, [apiState, fetchAPI, params]);\n\n  return state;\n};\n","import PropTypes from 'prop-types';\n\nimport SectionContainer from 'components/SectionContainer';\nimport Pending from 'components/Pending';\nimport { MovieActorsList } from './components/MovieActorsList';\nimport ErrorHandler from 'components/ErrorHandler';\n\nimport { useFetchParams } from 'hooks/useFetchParams';\n\nimport { fetchActors } from 'service/ApiService';\nimport { withApiState } from 'service/stateMachine';\n\nfunction MovieActors({ apiState }) {\n  const state = useFetchParams({\n    init: [],\n    apiState: apiState,\n    fetchAPI: fetchActors,\n  });\n  return (\n    <SectionContainer isEmpty={state?.cast?.length > 0 ? false : true}>\n      {apiState.isSuccess() && <MovieActorsList actors={state.cast} />}\n      {apiState.isPending() && <Pending />}\n      {apiState.isError() && <div>There is no Information</div>}\n      {apiState.isIdle() && (\n        <ErrorHandler\n          errorMessage=\"Oops, there is no information about actors, try please later\"\n          toastErrorMessage=\"Oops, something went wrong, try please later\"\n        />\n      )}\n    </SectionContainer>\n  );\n}\n\nMovieActors.propTypes = {\n  apiState: PropTypes.object,\n};\n\nexport default withApiState(MovieActors);\n","import PropTypes from 'prop-types';\n\nimport { ActorsList, ActorComponent } from '../styles/MovieActors.styled';\n\nexport const MovieActorsList = ({ actors = [] }) => {\n  return (\n    <ActorsList>\n      {actors.map(actor => (\n        <ActorComponent key={actor.cast_id}>\n          <div>\n            <h3>{actor.name}</h3>\n            <img\n              alt={actor.name}\n              src={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`}\n              width=\"95%\"\n            />\n            <p>Character: {actor.character}</p>\n          </div>\n        </ActorComponent>\n      ))}\n    </ActorsList>\n  );\n};\n\nMovieActorsList.propTypes = {\n  actors: PropTypes.array,\n};","import styled from 'styled-components';\n\nexport const ActorsList = styled.ul`\n  display: grid;\n  grid-template-columns: 19.5% 19.5% 19.5% 19.5% 19.5%;\n`;\n\nexport const ActorComponent = styled.li`\n  display: flex;\n  justify-content: center;\n  border: 1px solid black;\n  padding: 15px;\n\n  border-radius: 5px;\n  margin-right: 15px;\n  margin-bottom: 15px;\n`;\n","import axios from 'axios';\n\nconst API_KEY = 'ddd72ffccd1b0460d4d5bf775327139b';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchMovie = async movieId => {\n  const { data } = await axios\n    .get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n    .catch(error => errorHandler());\n  return data;\n};\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios\n    .get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n    .catch(error => errorHandler());\n  return data;\n};\n\nexport const fetchMovieByQuery = async (query = '') => {\n  const { data } = await axios\n    .get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`)\n    .catch(error => errorHandler());\n  return data;\n};\n\nexport const fetchReviews = async movieId => {\n  const { data } = await axios\n    .get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    )\n    .catch(error => errorHandler());\n  return data;\n};\n\nexport const fetchActors = async movieId => {\n  const { data } = await axios\n    .get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US&page=1`\n    )\n    .catch(error => errorHandler());\n  return data;\n};\n\nconst errorHandler = () => {\n  throw new Error();\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport toast from 'react-hot-toast';\n\nexport const withApiState = TargetComponent =>\n  class extends Component {\n    state = {\n      current: 'idle',\n    };\n    apiState = {\n      pending: () => this.setState({ current: 'pending' }), // => state\n      success: () => this.setState({ current: 'success' }),\n      error: () => {\n        this.setState({ current: 'error' });\n      },\n      idle: () => this.setState({ current: 'idle' }),\n      isPending: () => this.state.current === 'pending', // => state process\n      isSuccess: () => this.state.current === 'success',\n      isError: () => this.state.current === 'error',\n      isIdle: () => this.state.current === 'idle',\n    };\n\n    render() {\n      return <TargetComponent {...this.props} apiState={this.apiState} />;\n    }\n  };\n\nwithApiState.propTypes = {\n  TargetComponent: PropTypes.func.isRequired,\n};\n"],"names":["errorMessage","toastErrorMessage","useEffect","console","log","toast","Section","styled","props","isEmpty","children","useFetchParams","init","apiState","fetchAPI","useState","state","setState","params","useParams","pending","movieId","then","data","success","catch","error","withApiState","fetchActors","cast","length","isSuccess","MovieActorsList","actors","isPending","isError","isIdle","ActorsList","map","actor","ActorComponent","name","alt","src","profile_path","width","character","cast_id","API_KEY","BASE_URL","fetchMovie","axios","errorHandler","fetchTrendingMovies","fetchMovieByQuery","query","fetchReviews","Error","TargetComponent","current","idle","this","Component"],"sourceRoot":""}