{"version":3,"file":"static/js/686.4eae7fb6.chunk.js","mappings":"4MAYA,EATqB,SAAC,GAAyC,IAAvCA,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,kBAMpC,OALAC,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAIH,GACZI,EAAAA,GAAAA,MAAYJ,KACX,CAACA,KAEG,yBAAMD,M,wFCPFM,E,QAASC,GAAAA,GAAH,sF,SCGJ,SAASC,EAAT,GAAgC,IAAXC,EAAU,EAAVA,OAC5BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,SAACP,EAAD,WACE,SAAC,KAAD,CACEQ,IACEJ,EAASK,SAASC,OAAlB,0CACuCH,EAAMI,KAG/CC,MAAOR,EANT,SAQGG,EAAMM,kBATEN,EAAMI,W,4ECRdG,E,QAAUb,GAAAA,QAAH,4HAGR,SAAAc,GAAK,OAAKA,EAAMC,QAAU,OAAS,qBAE/B,SAAAD,GAAK,OAAKA,EAAMC,QAAU,QAAU,U,SCOpD,EATyB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUD,EAAc,EAAdA,QACpC,OAAO,SAACF,EAAD,CAASE,QAASA,EAAlB,SAA4BC,M,6JCiCrC,OAAeC,EAAAA,EAAAA,IA1Bf,YAAiC,IAAbC,EAAY,EAAZA,SACZP,ECZgB,SAAC,GAAmC,IAAjCO,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC7C,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOV,EAAP,KAAcW,EAAd,KAUA,OARA3B,EAAAA,EAAAA,YAAU,WACRuB,EAASK,UACTJ,EAASC,GAAOI,MAAK,SAAAC,GACnBH,EAASG,EAAKC,SACdR,EAASS,aACRC,OAAM,SAAAC,GAAG,OAAIX,EAASY,aACxB,CAACZ,EAAUC,EAAUC,IAEjBT,EDCOoB,CAAS,CAAEb,SAAUA,EAAUC,SAAUa,EAAAA,KAEvD,OACE,UAACC,EAAA,EAAD,WACGf,EAASgB,cACR,iCACE,oDACA,SAACjC,EAAA,EAAD,CAAWC,OAAQS,OAGtBO,EAASiB,cAAe,SAACC,EAAA,EAAD,IACxBlB,EAASmB,YACR,SAACC,EAAA,EAAD,CACE7C,aAAa,+CACbC,kBAAkB,wD,mSE1BtB6C,EAAU,mCAEVC,EAAW,+BAEJC,EAAU,mCAAG,WAAMC,GAAN,yFACDC,IAAAA,IAAA,UACbH,EADa,kBACKE,EADL,oBACwBH,IAC5CX,OAAM,SAAAE,GAAK,OAAIc,OAHM,uBAChBnB,EADgB,EAChBA,KADgB,kBAIjBA,GAJiB,2CAAH,sDAOVO,EAAmB,mCAAG,sGACVW,IAAAA,IAAA,UACbH,EADa,uCAC0BD,IAC9CX,OAAM,SAAAE,GAAK,OAAIc,OAHe,uBACzBnB,EADyB,EACzBA,KADyB,kBAI1BA,GAJ0B,2CAAH,qDAOnBoB,EAAiB,mCAAG,2GAAOC,EAAP,+BAAe,GAAf,SACRH,IAAAA,IAAA,UACbH,EADa,iCACoBD,EADpB,kBACqCO,IACzDlB,OAAM,SAAAE,GAAK,OAAIc,OAHa,uBACvBnB,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qDAOjBsB,EAAY,mCAAG,WAAML,GAAN,yFACHC,IAAAA,IAAA,UAEhBH,EAFgB,kBAEEE,EAFF,4BAE6BH,EAF7B,2BAIpBX,OAAM,SAAAE,GAAK,OAAIc,OALQ,uBAClBnB,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZuB,EAAW,mCAAG,WAAMN,GAAN,yFACFC,IAAAA,IAAA,UAEhBH,EAFgB,kBAEEE,EAFF,4BAE6BH,EAF7B,2BAIpBX,OAAM,SAAAE,GAAK,OAAIc,OALO,uBACjBnB,EADiB,EACjBA,KADiB,kBAMlBA,GANkB,2CAAH,sDASlBmB,EAAe,WACnB,MAAM,IAAIK,Q,6HC3CChC,EAAe,SAAAiC,GAAe,uMAEvCvC,MAAQ,CACNwC,QAAS,QAH4B,EAKvCjC,SAAW,CACTK,QAAS,kBAAM,EAAKD,SAAS,CAAE6B,QAAS,aACxCxB,QAAS,kBAAM,EAAKL,SAAS,CAAE6B,QAAS,aACxCrB,MAAO,WACLlC,QAAQC,IAAI,SACZ,EAAKyB,SAAS,CAAE6B,QAAS,WAE3BC,KAAM,kBAAM,EAAK9B,SAAS,CAAE6B,QAAS,UACrChB,UAAW,iBAA6B,YAAvB,EAAKxB,MAAMwC,SAC5BjB,UAAW,iBAA6B,YAAvB,EAAKvB,MAAMwC,SAC5Bd,QAAS,iBAA6B,UAAvB,EAAK1B,MAAMwC,SAC1BE,OAAQ,iBAA6B,SAAvB,EAAK1C,MAAMwC,UAhBY,uCAmBvC,WACE,OAAO,SAACD,GAAD,kBAAqBI,KAAKxC,OAA1B,IAAiCI,SAAUoC,KAAKpC,gBApBlB,GAC3BqC,EAAAA","sources":["components/ErrorHandler/ErrorHandler.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/SectionContainer/SectionContainer.styled.jsx","components/SectionContainer/SectionContainer.jsx","pages/HomePage/HomePage.jsx","hooks/useFetch.js","service/ApiService.js","service/stateMachine.js"],"sourcesContent":["import { useEffect } from 'react';\nimport toast from 'react-hot-toast';\n\nconst ErrorHandler = ({ errorMessage, toastErrorMessage }) => {\n  useEffect(() => {\n    console.log(toastErrorMessage)\n    toast.error(toastErrorMessage);\n  }, [toastErrorMessage]);\n\n  return <div>{errorMessage}</div>;\n};\n\nexport default ErrorHandler;\n","import styled from \"styled-components\";\n\nexport const ListEl = styled.li`\n    :not(:last-child) {\n        margin-bottom: 20px;\n    }\n`;","import { NavLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { ListEl } from './MovieList.styled';\n\nexport default function MovieList({ movies }) {\n  const location = useLocation();\n  return (\n    <ol>\n      {movies.map(movie => (\n        <ListEl key={movie.id}>\n          <NavLink\n            to={\n              location.pathname.length < 2\n                ? `/goit-react-hw-05-movies/movies/${movie.id}`\n                : `/goit-react-hw-05-movies/movies/${movie.id}`\n            }\n            state={location}\n          >\n            {movie.original_title}\n          </NavLink>\n        </ListEl>\n      ))}\n    </ol>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n}\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  position: relative;\n  padding: 10px;\n  border: ${props => (props.isEmpty ? 'none' : '1px solid black')};\n  border-radius: 3px;\n  min-height: ${props => (props.isEmpty ? '500px' : 'auto')};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Section } from './SectionContainer.styled';\n\nconst SectionContainer = ({ children, isEmpty }) => {\n  return <Section isEmpty={isEmpty}>{children}</Section>;\n};\n\nSectionContainer.propTypes = {\n  children: PropTypes.any,\n  isEmpty: PropTypes.bool,\n}\n\nexport default SectionContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { fetchTrendingMovies } from 'service/ApiService';\nimport { withApiState } from 'service/stateMachine';\n\nimport SectionContainer from 'components/SectionContainer';\nimport MovieList from 'components/MovieList';\nimport Pending from 'components/Pending';\nimport ErrorHandler from 'components/ErrorHandler';\n\nimport { useFetch } from 'hooks/useFetch';\n\nfunction HomePage({ apiState }) {\n  const state = useFetch({ apiState: apiState, fetchAPI: fetchTrendingMovies });\n\n  return (\n    <SectionContainer>\n      {apiState.isSuccess() && (\n        <>\n          <h1>Movies in trends today</h1>\n          <MovieList movies={state} />\n        </>\n      )}\n      {apiState.isPending() && <Pending />}\n      {apiState.isError() && (\n        <ErrorHandler\n          errorMessage=\"Oops, something went wrong, try please later\"\n          toastErrorMessage=\"Oops, something went wrong, try please later\"\n        />\n      )}\n    </SectionContainer>\n  );\n}\n\nHomePage.propTypes = {\n  apiState: PropTypes.object,\n};\n\nexport default withApiState(HomePage);\n","import { useEffect, useState } from 'react';\n\nexport const useFetch = ({ apiState, fetchAPI, param }) => {\n  const [state, setState] = useState([]);\n\n  useEffect(() => {\n    apiState.pending();\n    fetchAPI(param).then(data => {\n      setState(data.results);\n      apiState.success();\n    }).catch(err => apiState.error());\n  }, [apiState, fetchAPI, param]);\n\n  return state;\n};\n","import axios from 'axios';\n\nconst API_KEY = 'ddd72ffccd1b0460d4d5bf775327139b';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchMovie = async movieId => {\n  const { data } = await axios\n    .get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n    .catch(error => errorHandler());\n  return data;\n};\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios\n    .get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n    .catch(error => errorHandler());\n  return data;\n};\n\nexport const fetchMovieByQuery = async (query = '') => {\n  const { data } = await axios\n    .get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`)\n    .catch(error => errorHandler());\n  return data;\n};\n\nexport const fetchReviews = async movieId => {\n  const { data } = await axios\n    .get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    )\n    .catch(error => errorHandler());\n  return data;\n};\n\nexport const fetchActors = async movieId => {\n  const { data } = await axios\n    .get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US&page=1`\n    )\n    .catch(error => errorHandler());\n  return data;\n};\n\nconst errorHandler = () => {\n  throw new Error();\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const withApiState = TargetComponent =>\n  class extends Component {\n    state = {\n      current: 'idle',\n    };\n    apiState = {\n      pending: () => this.setState({ current: 'pending' }), \n      success: () => this.setState({ current: 'success' }),\n      error: () => {\n        console.log('error');\n        this.setState({ current: 'error' });\n      },\n      idle: () => this.setState({ current: 'idle' }),\n      isPending: () => this.state.current === 'pending', \n      isSuccess: () => this.state.current === 'success',\n      isError: () => this.state.current === 'error',\n      isIdle: () => this.state.current === 'idle',\n    };\n\n    render() {\n      return <TargetComponent {...this.props} apiState={this.apiState} />;\n    }\n  };\n\nwithApiState.propTypes = {\n  TargetComponent: PropTypes.func.isRequired,\n};\n"],"names":["errorMessage","toastErrorMessage","useEffect","console","log","toast","ListEl","styled","MovieList","movies","location","useLocation","map","movie","to","pathname","length","id","state","original_title","Section","props","isEmpty","children","withApiState","apiState","fetchAPI","param","useState","setState","pending","then","data","results","success","catch","err","error","useFetch","fetchTrendingMovies","SectionContainer","isSuccess","isPending","Pending","isError","ErrorHandler","API_KEY","BASE_URL","fetchMovie","movieId","axios","errorHandler","fetchMovieByQuery","query","fetchReviews","fetchActors","Error","TargetComponent","current","idle","isIdle","this","Component"],"sourceRoot":""}