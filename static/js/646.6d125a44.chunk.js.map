{"version":3,"file":"static/js/646.6d125a44.chunk.js","mappings":"sNAYA,EATqB,SAAC,GAAyC,IAAvCA,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,kBAMpC,OALAC,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAIH,GACZI,EAAAA,GAAAA,MAAYJ,KACX,CAACA,KAEG,yBAAMD,M,4ECPFM,E,QAAUC,GAAAA,QAAH,4HAGR,SAAAC,GAAK,OAAKA,EAAMC,QAAU,OAAS,qBAE/B,SAAAD,GAAK,OAAKA,EAAMC,QAAU,QAAU,U,SCOpD,EATyB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUD,EAAc,EAAdA,QACpC,OAAO,SAACH,EAAD,CAASG,QAASA,EAAlB,SAA4BC,M,sFCHxBC,EAAiB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC/C,GAA0BC,EAAAA,EAAAA,UAASH,GAAnC,eAAOI,EAAP,KAAcC,EAAd,KACMC,GAASC,EAAAA,EAAAA,MAcf,OAZAjB,EAAAA,EAAAA,YAAU,WACRW,EAASO,UACTN,EAASI,EAAOG,SACbC,MAAK,SAAAC,GACJN,EAASM,GACTV,EAASW,aAEVC,OAAM,SAAAC,GACLb,EAASa,aAEZ,CAACb,EAAUC,EAAUI,IAEjBF,I,4GCkBT,WAAeW,EAAAA,EAAAA,IAzBf,YAAoC,IAAD,EAAZd,EAAY,EAAZA,SACfG,GAAQL,EAAAA,EAAAA,GAAe,CAC3BC,KAAM,GACNC,SAAUA,EACVC,SAAUc,EAAAA,KAEZ,OACE,UAAC,IAAD,CAAkBnB,WAAc,OAALO,QAAK,IAALA,GAAA,UAAAA,EAAOa,YAAP,eAAaC,QAAS,GAAjD,UACGjB,EAASkB,cAAe,SAAC,EAAAC,gBAAD,CAAiBC,OAAQjB,EAAMa,OACvDhB,EAASqB,cAAe,SAAC,IAAD,IACxBrB,EAASsB,YACR,SAAC,IAAD,CACEnC,aAAa,+DACbC,kBAAkB,iDAGrBY,EAASuB,WAAY,mD,qJC1BrB,SAASC,EAAT,GAAyD,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,IAAQ/B,GAAS,YAC7D,GAA4BO,EAAAA,EAAAA,UAASwB,GAArC,eAAOC,EAAP,KAAeC,EAAf,KAGA,OAAO,wBAAKF,IAAKC,GAAkBF,EAAUI,QAF7B,kBAAMD,EAAUH,KAEmC9B,M,oHCDxDwB,EAAkB,SAAC,GAAqB,IAAD,IAAlBC,OAAAA,OAAkB,MAAT,GAAS,EAClD,OACE,SAAC,EAAAU,WAAD,UACGV,EAAOW,KAAI,SAAAC,GAAK,OACf,SAAC,EAAAC,eAAD,WACE,4BACE,wBAAKD,EAAME,QACX,SAAC,EAAAV,kBAAD,CAAmBC,SAAUU,EAAcT,IAAG,0CAAqCM,EAAMI,cAAgBC,IAAKL,EAAME,KAAMI,MAAM,SAChI,uCAAeN,EAAMO,iBAJJP,EAAMQ,gB,yNCPtBV,EAAapC,EAAAA,GAAAA,GAAH,mGAKVuC,EAAiBvC,EAAAA,GAAAA,GAAH,6L,0MCLrB+C,EAAU,mCAEVC,EAAW,+BAEJC,EAAU,mCAAG,WAAMnC,GAAN,yFACDoC,IAAAA,IAAA,UACbF,EADa,kBACKlC,EADL,oBACwBiC,IAC5C7B,OAAM,SAAAC,GAAK,OAAIgC,OAHM,uBAChBnC,EADgB,EAChBA,KADgB,kBAIjBA,GAJiB,2CAAH,sDAOVoC,EAAmB,mCAAG,sGACVF,IAAAA,IAAA,UACbF,EADa,uCAC0BD,IAC9C7B,OAAM,SAAAC,GAAK,OAAIgC,OAHe,uBACzBnC,EADyB,EACzBA,KADyB,kBAI1BA,GAJ0B,2CAAH,qDAOnBqC,EAAiB,mCAAG,2GAAOC,EAAP,+BAAe,GAAf,SACRJ,IAAAA,IAAA,UACbF,EADa,iCACoBD,EADpB,kBACqCO,IACzDpC,OAAM,SAAAC,GAAK,OAAIgC,OAHa,uBACvBnC,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,qDAOjBuC,EAAY,mCAAG,WAAMzC,GAAN,yFACHoC,IAAAA,IAAA,UAEhBF,EAFgB,kBAEElC,EAFF,4BAE6BiC,EAF7B,2BAIpB7B,OAAM,SAAAC,GAAK,OAAIgC,OALQ,uBAClBnC,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZK,EAAW,mCAAG,WAAMP,GAAN,yFACFoC,IAAAA,IAAA,UAEhBF,EAFgB,kBAEElC,EAFF,4BAE6BiC,EAF7B,2BAIpB7B,OAAM,SAAAC,GAAK,OAAIgC,OALO,uBACjBnC,EADiB,EACjBA,KADiB,kBAMlBA,GANkB,2CAAH,sDASlBmC,EAAe,WACnB,MAAM,IAAIK,Q,6HC3CCpC,EAAe,SAAAqC,GAAe,uMAEvChD,MAAQ,CACNiD,QAAS,QAH4B,EAKvCpD,SAAW,CACTO,QAAS,kBAAM,EAAKH,SAAS,CAAEgD,QAAS,aACxCzC,QAAS,kBAAM,EAAKP,SAAS,CAAEgD,QAAS,aACxCvC,MAAO,WACLvB,QAAQC,IAAI,SACZ,EAAKa,SAAS,CAAEgD,QAAS,WAE3BC,KAAM,kBAAM,EAAKjD,SAAS,CAAEgD,QAAS,UACrC/B,UAAW,iBAA6B,YAAvB,EAAKlB,MAAMiD,SAC5BlC,UAAW,iBAA6B,YAAvB,EAAKf,MAAMiD,SAC5B9B,QAAS,iBAA6B,UAAvB,EAAKnB,MAAMiD,SAC1B7B,OAAQ,iBAA6B,SAAvB,EAAKpB,MAAMiD,UAhBY,uCAmBvC,WACE,OAAO,SAACD,GAAD,kBAAqBG,KAAK3D,OAA1B,IAAiCK,SAAUsD,KAAKtD,gBApBlB,GAC3BuD,EAAAA,a,oKCHD,SAASC,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIE,EAAKC,EADLC,GAAS,OAA6BJ,EAAQC,GAGlD,GAAII,OAAOC,sBAAuB,CAChC,IAAIC,EAAmBF,OAAOC,sBAAsBN,GAEpD,IAAKG,EAAI,EAAGA,EAAII,EAAiB/C,OAAQ2C,IACvCD,EAAMK,EAAiBJ,GACnBF,EAASO,QAAQN,IAAQ,GACxBG,OAAOI,UAAUC,qBAAqBC,KAAKX,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,IAIzB,OAAOE","sources":["components/ErrorHandler/ErrorHandler.jsx","components/SectionContainer/SectionContainer.styled.jsx","components/SectionContainer/SectionContainer.jsx","hooks/useFetchParams.js","pages/MovieActors/MovieActors.jsx","pages/MovieActors/components/ImageWithFallBack.jsx","pages/MovieActors/components/MovieActorsList.jsx","pages/MovieActors/styles/MovieActors.styled.jsx","service/ApiService.js","service/stateMachine.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import { useEffect } from 'react';\nimport toast from 'react-hot-toast';\n\nconst ErrorHandler = ({ errorMessage, toastErrorMessage }) => {\n  useEffect(() => {\n    console.log(toastErrorMessage)\n    toast.error(toastErrorMessage);\n  }, [toastErrorMessage]);\n\n  return <div>{errorMessage}</div>;\n};\n\nexport default ErrorHandler;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  position: relative;\n  padding: 10px;\n  border: ${props => (props.isEmpty ? 'none' : '1px solid black')};\n  border-radius: 3px;\n  min-height: ${props => (props.isEmpty ? '500px' : 'auto')};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Section } from './SectionContainer.styled';\n\nconst SectionContainer = ({ children, isEmpty }) => {\n  return <Section isEmpty={isEmpty}>{children}</Section>;\n};\n\nSectionContainer.propTypes = {\n  children: PropTypes.any,\n  isEmpty: PropTypes.bool,\n}\n\nexport default SectionContainer;","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport const useFetchParams = ({ init, apiState, fetchAPI }) => {\n  const [state, setState] = useState(init);\n  const params = useParams();\n\n  useEffect(() => {\n    apiState.pending();\n    fetchAPI(params.movieId)\n      .then(data => {\n        setState(data);\n        apiState.success();\n      })\n      .catch(error => {\n        apiState.error()\n      });\n  }, [apiState, fetchAPI, params]);\n\n  return state;\n};\n","import PropTypes from 'prop-types';\n\nimport SectionContainer from 'components/SectionContainer';\nimport Pending from 'components/Pending';\nimport { MovieActorsList } from './components/MovieActorsList';\nimport ErrorHandler from 'components/ErrorHandler';\n\nimport { useFetchParams } from 'hooks/useFetchParams';\n\nimport { fetchActors } from 'service/ApiService';\nimport { withApiState } from 'service/stateMachine';\n\nfunction MovieActors({ apiState }) {\n  const state = useFetchParams({\n    init: [],\n    apiState: apiState,\n    fetchAPI: fetchActors,\n  });\n  return (\n    <SectionContainer isEmpty={state?.cast?.length > 0 ? false : true}>\n      {apiState.isSuccess() && <MovieActorsList actors={state.cast} />}\n      {apiState.isPending() && <Pending />}\n      {apiState.isError() && (\n        <ErrorHandler\n          errorMessage=\"Oops, there is no information about actors, try please later\"\n          toastErrorMessage=\"Oops, something went wrong, try please later\"\n        />\n      )}\n      {apiState.isIdle() && <div>No information</div>}\n    </SectionContainer>\n  );\n}\n\nMovieActors.propTypes = {\n  apiState: PropTypes.object,\n};\n\nexport default withApiState(MovieActors);\n","import React, { useState } from 'react';\n\nexport function ImageWithFallback({ fallback, src, ...props }) {\n  const [imgSrc, setImgSrc] = useState(src);\n  const onError = () => setImgSrc(fallback);\n\n  return <img src={imgSrc ? imgSrc : fallback} onError={onError} {...props} />;\n}\n","import PropTypes from 'prop-types';\nimport { ActorsList, ActorComponent } from '../styles/MovieActors.styled';\nimport { ImageWithFallback } from './ImageWithFallBack';\nimport replaceImage from 'images/person-replace-image.png';\n\nexport const MovieActorsList = ({ actors = [] }) => {\n  return (\n    <ActorsList>\n      {actors.map(actor => (\n        <ActorComponent key={actor.cast_id}>\n          <div>\n            <h3>{actor.name}</h3>\n            <ImageWithFallback fallback={replaceImage} src={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`} alt={actor.name} width=\"95%\"/>\n            <p>Character: {actor.character}</p>\n          </div>\n        </ActorComponent>\n      ))}\n    </ActorsList>\n  );\n};\n\nMovieActorsList.propTypes = {\n  actors: PropTypes.array,\n};","import styled from 'styled-components';\n\nexport const ActorsList = styled.ul`\n  display: grid;\n  grid-template-columns: 19.5% 19.5% 19.5% 19.5% 19.5%;\n`;\n\nexport const ActorComponent = styled.li`\n  display: flex;\n  justify-content: center;\n  border: 1px solid black;\n  padding: 15px;\n\n  border-radius: 5px;\n  margin-right: 15px;\n  margin-bottom: 15px;\n`;\n","import axios from 'axios';\n\nconst API_KEY = 'ddd72ffccd1b0460d4d5bf775327139b';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchMovie = async movieId => {\n  const { data } = await axios\n    .get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n    .catch(error => errorHandler());\n  return data;\n};\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios\n    .get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n    .catch(error => errorHandler());\n  return data;\n};\n\nexport const fetchMovieByQuery = async (query = '') => {\n  const { data } = await axios\n    .get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`)\n    .catch(error => errorHandler());\n  return data;\n};\n\nexport const fetchReviews = async movieId => {\n  const { data } = await axios\n    .get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    )\n    .catch(error => errorHandler());\n  return data;\n};\n\nexport const fetchActors = async movieId => {\n  const { data } = await axios\n    .get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US&page=1`\n    )\n    .catch(error => errorHandler());\n  return data;\n};\n\nconst errorHandler = () => {\n  throw new Error();\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const withApiState = TargetComponent =>\n  class extends Component {\n    state = {\n      current: 'idle',\n    };\n    apiState = {\n      pending: () => this.setState({ current: 'pending' }), \n      success: () => this.setState({ current: 'success' }),\n      error: () => {\n        console.log('error');\n        this.setState({ current: 'error' });\n      },\n      idle: () => this.setState({ current: 'idle' }),\n      isPending: () => this.state.current === 'pending', \n      isSuccess: () => this.state.current === 'success',\n      isError: () => this.state.current === 'error',\n      isIdle: () => this.state.current === 'idle',\n    };\n\n    render() {\n      return <TargetComponent {...this.props} apiState={this.apiState} />;\n    }\n  };\n\nwithApiState.propTypes = {\n  TargetComponent: PropTypes.func.isRequired,\n};\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}"],"names":["errorMessage","toastErrorMessage","useEffect","console","log","toast","Section","styled","props","isEmpty","children","useFetchParams","init","apiState","fetchAPI","useState","state","setState","params","useParams","pending","movieId","then","data","success","catch","error","withApiState","fetchActors","cast","length","isSuccess","MovieActorsList","actors","isPending","isError","isIdle","ImageWithFallback","fallback","src","imgSrc","setImgSrc","onError","ActorsList","map","actor","ActorComponent","name","replaceImage","profile_path","alt","width","character","cast_id","API_KEY","BASE_URL","fetchMovie","axios","errorHandler","fetchTrendingMovies","fetchMovieByQuery","query","fetchReviews","Error","TargetComponent","current","idle","this","Component","_objectWithoutProperties","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}